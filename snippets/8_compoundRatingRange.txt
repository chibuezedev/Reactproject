 exports = async function({ query, headers, body}, response) {
  
  // GET A HANDLE TO THE MOVIES COLLECTION
  const moviesCollection = context.services.get("mongodb-atlas").db("sample_mflix").collection("movies");
  
  // GET SEARCHTERM FROM QUERY PARAMETER. IF NONE, RETURN EMPTY ARRAY
  let searchTerm = query.searchTerm;
  if (!query.searchTerm || searchTerm ===""){
    return [];
  }
  let rating= query.rating;
  
  if (!query.rating){
    rating = 0;
  } else {
    rating= parseInt(rating);
  }
  
  const searchAggregation = [
  {
    '$search': {
      'compound': {
        'should': {
          'text': {
            'query': searchTerm, 
            'path': [
              'title', 'plot', 'fullplot'
            ], 
            'fuzzy': {
              'maxEdits': 1
            }
          }
        }, 
        'must': {
          'range': {
            'gte': rating, 
            'lte': 10, 
            'path': 'imdb.rating'
          }
        }
      }, 
      'highlight': {
        'path': 'fullplot'
      }
    }
  }, {
    '$limit': 20
  }, {
    '$project': {
      'title': 1, 
      'year': 1, 
      'plot': 1, 
      'fullplot': 1, 
      'released': 1, 
      'poster': 1, 
      'imdb': 1, 
      'score': {
        '$meta': 'searchScore'
      }, 
      'highlights': {
        '$meta': 'searchHighlights'
      }
    }
  }
];
  
  const results = await moviesCollection.aggregate(searchAggregation).toArray();

// pro tip!!
  response.setHeader("content-type", "application/json");
  response.setBody(JSON.stringify(results));
  
  
};